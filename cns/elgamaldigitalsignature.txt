#include<stdio.h>
#include<math.h>
int findGCD(int n1,int n2)

{
int i,gcd;
for(i=1;i<=n1 && i<=n2; i++)
{
if(n1%i==0 && n2%i==0)
gcd=i;
}
return gcd;
}
void main()
{
int z,m1,q,i,xa,k=1,c1=1,alpha,k1=1,c2,m,kInv=1;
long long int ya=1,r,s,v,w;
printf("Enter prime number q : ");
scanf("%d",&q);
printf("Enter primitive root of q : ");
scanf("%d",&alpha);
printf("Enter A's private key : ");
scanf("%d",&xa);
ya=(int)pow(alpha,xa)%q;
printf("\nA's public key is {%d,%d,%lld}",q,alpha,ya);
for(k=2;k<q;k++)
if(findGCD(k,q-1)==1)
break;
printf("\nKey is: %d",k);
r=(int)pow(alpha,k)%(q-1);
while((kInv*k)%(q-1) != 1)
kInv++;
printf("\nInverse of k is %d ",kInv);
printf("\n\nEnter M Value: ");
scanf("%d",&m);
s=(kInv*(m-(xa*r)))%(q-1);
if(s<0)
s=s+(q-1);
printf("\nDigital Signature: (%lld,%lld)",r,s);
v=(long long int)pow(alpha,m)%(q-1);
w=(long long int)(pow(ya,r)*pow(r,s))%(q-1);
printf("\nv=%lld w=%lld",v,w);
if(v==w)
printf("\nSignature is valid\n");
else
printf("\nSignature is not valid\n");
}